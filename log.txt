[H[2J[3JBuild environment started
08:03:41

Transform environment variables from './template.env'
Import environment variables from './.env'

Stop containers

Execute the pre-build script
No steps are required for the local build

Create nginx config

Create Hasura console config

Start database and authentication containers

Configure Keycloak
------------------------------------------------------------------------------------------------------------------------

KEYCLOAK INITIALISATION SCRIPT

------------------------------------------------------------------------------------------------------------------------


Install JSON Query...

(microdnf:128): librhsm-[1;33mWARNING[0m **: [34m00:03:52.668[0m: Found 0 entitlement certificates

(microdnf:128): librhsm-[1;33mWARNING[0m **: [34m00:03:52.669[0m: Found 0 entitlement certificates

Wait for keycloak to complete the startup process...

Login to Keycloak...
Logging into http://localhost:8080/auth as user admin of realm master

Create the realm: app
Created new realm with id 'app'

Create API user:  with password: api_pwd_scramble_me
Created new user with id 'ecb1ec31-f5e3-4b5a-bd95-a56af8092f65'

Create platform admin user: app_admin with password: password
Created new user with id '0c8257e8-a9c6-41c0-ab89-5a0184ef462a'
Assign admin roles: app_admin

Create Australian tenant admin user: oz_app_admin with password: password
Created new user with id '7a93f61e-df1d-4aa9-aa0b-6260646f0356'
Assign tenant_admin roles: oz_app_admin

Create Australian tenant admin user: ozadmin without key attributes set and password: password
Created new user with id '946a19ed-9c4e-4c13-bbf9-6ccbbe27324d'
Assign tenant_admin roles: ozadmin

Create Scottish tenant admin user: scot_app_admin with password: password
Created new user with id 'f75a2edb-af0a-4521-a4aa-948da0322971'
Assign tenant_admin roles: scot_app_admin with password: password

Create test user for 'perth' tenant: app_user with password: password
Created new user with id 'daa0cc3f-c342-4099-ba90-18e89f059d27'

Capture the realm public key...
Captured the realm public key into:/docker-entrypoint-initdb.d/private_data/token.env
Test authentication - request token for: oz_app_admin

Bearer token captured into: /docker-entrypoint-initdb.d/private_data/auth_token.json

** NOTE FOR DEBUGGING
Goto: https://jwt.io/ and paste the whole contents of the file into debugger web page
You can then verify all the components of the JWT token are in place with expected values.


Start Hasura GraphQL container


Applying database migrations
Execute qiktrak...
Allow Hasura container to stabilise
Attaching to qiktrak
qiktrak  | --------------------------------------------------------------
qiktrak  | 
qiktrak  | qik-track          : Rapid, intuitive Hasura tracking setup
qiktrak  | 
qiktrak  | DATABASE           : 'qiksar'
qiktrak  | SCHEMA             : 'membership'
qiktrak  | 
qiktrak  | HASURA ENDPOINT    : 'http://q_gql:8080'
qiktrak  | PRIMARY KEY SUFFIX : '_id'
qiktrak  | 
qiktrak  | --------------------------------------------------------------
qiktrak  | 
qiktrak  | REMOVE PREVIOUS HASURA TRACKING DETAILS FOR TABLES AND VIEWS
qiktrak  | 
qiktrak  | EXECUTE SQL SCRIPTS BEFORE VIEW BUILDER
qiktrak  | 
qiktrak  | 
qiktrak  | 
qiktrak  | --------------------------------------------------------------
qiktrak  | 
qiktrak  | QIK-TRAK: ERROR
qiktrak  | 
qiktrak  | SQL QUERY FAILED TO EXECUTE: 
qiktrak  | 
qiktrak  | ENDPOINT ADDRESS : http://q_gql:8080
qiktrak  | 
qiktrak  | Error Message : {"internal":{"statement":"--- The create database process is now integrated with Hasura migrations","prepared":false,"error":{"exec_status":"EmptyQuery","hint":null,"message":null,"status_code":null,"description":null},"arguments":[]},"path":"$","error":"query execution failed","code":"postgres-error"}
qiktrak  | 
qiktrak  | SQL Statement:
qiktrak  | 
qiktrak  | --- The create database process is now integrated with Hasura migrations
qiktrak  | 
qiktrak  | Check for SQL syntax errors. Test the query in your admin tool.
qiktrak  | 
qiktrak  | --------------------------------------------------------------
qiktrak  | /node_modules/axios/lib/core/createError.js:16
qiktrak  |   var error = new Error(message);
qiktrak  |               ^
qiktrak  | 
qiktrak  | Error: Request failed with status code 400
qiktrak  |     at createError (/node_modules/axios/lib/core/createError.js:16:15)
qiktrak  |     at settle (/node_modules/axios/lib/core/settle.js:17:12)
qiktrak  |     at IncomingMessage.handleStreamEnd (/node_modules/axios/lib/adapters/http.js:269:11)
qiktrak  |     at IncomingMessage.emit (node:events:402:35)
qiktrak  |     at endReadableNT (node:internal/streams/readable:1343:12)
qiktrak  |     at processTicksAndRejections (node:internal/process/task_queues:83:21) {
qiktrak  |   config: {
qiktrak  |     url: 'http://q_gql:8080/v2/query',
qiktrak  |     method: 'post',
qiktrak  |     data: '{"type":"run_sql","args":{"sql":"--- The create database process is now integrated with Hasura migrations"}}',
qiktrak  |     headers: {
qiktrak  |       Accept: 'application/json, text/plain, */*',
qiktrak  |       'Content-Type': 'application/json',
qiktrak  |       'X-Hasura-Admin-Secret': 'hasura',
qiktrak  |       'User-Agent': 'axios/0.21.4',
qiktrak  |       'Content-Length': 108
qiktrak  |     },
qiktrak  |     transformRequest: [ [Function: transformRequest] ],
qiktrak  |     transformResponse: [ [Function: transformResponse] ],
qiktrak  |     timeout: 0,
qiktrak  |     adapter: [Function: httpAdapter],
qiktrak  |     xsrfCookieName: 'XSRF-TOKEN',
qiktrak  |     xsrfHeaderName: 'X-XSRF-TOKEN',
qiktrak  |     maxContentLength: -1,
qiktrak  |     maxBodyLength: -1,
qiktrak  |     validateStatus: [Function: validateStatus],
qiktrak  |     transitional: {
qiktrak  |       silentJSONParsing: true,
qiktrak  |       forcedJSONParsing: true,
qiktrak  |       clarifyTimeoutError: false
qiktrak  |     }
qiktrak  |   },
qiktrak  |   request: <ref *1> ClientRequest {
qiktrak  |     _events: [Object: null prototype] {
qiktrak  |       abort: [Function (anonymous)],
qiktrak  |       aborted: [Function (anonymous)],
qiktrak  |       connect: [Function (anonymous)],
qiktrak  |       error: [Function (anonymous)],
qiktrak  |       socket: [Function (anonymous)],
qiktrak  |       timeout: [Function (anonymous)],
qiktrak  |       prefinish: [Function: requestOnPrefinish]
qiktrak  |     },
qiktrak  |     _eventsCount: 7,
qiktrak  |     _maxListeners: undefined,
qiktrak  |     outputData: [],
qiktrak  |     outputSize: 0,
qiktrak  |     writable: true,
qiktrak  |     destroyed: false,
qiktrak  |     _last: true,
qiktrak  |     chunkedEncoding: false,
qiktrak  |     shouldKeepAlive: false,
qiktrak  |     maxRequestsOnConnectionReached: false,
qiktrak  |     _defaultKeepAlive: true,
qiktrak  |     useChunkedEncodingByDefault: true,
qiktrak  |     sendDate: false,
qiktrak  |     _removedConnection: false,
qiktrak  |     _removedContLen: false,
qiktrak  |     _removedTE: false,
qiktrak  |     _contentLength: null,
qiktrak  |     _hasBody: true,
qiktrak  |     _trailer: '',
qiktrak  |     finished: true,
qiktrak  |     _headerSent: true,
qiktrak  |     _closed: false,
qiktrak  |     socket: <ref *2> Socket {
qiktrak  |       connecting: false,
qiktrak  |       _hadError: false,
qiktrak  |       _parent: null,
qiktrak  |       _host: 'q_gql',
qiktrak  |       _readableState: ReadableState {
qiktrak  |         objectMode: false,
qiktrak  |         highWaterMark: 16384,
qiktrak  |         buffer: BufferList { head: null, tail: null, length: 0 },
qiktrak  |         length: 0,
qiktrak  |         pipes: [],
qiktrak  |         flowing: true,
qiktrak  |         ended: false,
qiktrak  |         endEmitted: false,
qiktrak  |         reading: true,
qiktrak  |         constructed: true,
qiktrak  |         sync: false,
qiktrak  |         needReadable: true,
qiktrak  |         emittedReadable: false,
qiktrak  |         readableListening: false,
qiktrak  |         resumeScheduled: false,
qiktrak  |         errorEmitted: false,
qiktrak  |         emitClose: false,
qiktrak  |         autoDestroy: true,
qiktrak  |         destroyed: false,
qiktrak  |         errored: null,
qiktrak  |         closed: false,
qiktrak  |         closeEmitted: false,
qiktrak  |         defaultEncoding: 'utf8',
qiktrak  |         awaitDrainWriters: null,
qiktrak  |         multiAwaitDrain: false,
qiktrak  |         readingMore: false,
qiktrak  |         dataEmitted: true,
qiktrak  |         decoder: null,
qiktrak  |         encoding: null,
qiktrak  |         [Symbol(kPaused)]: false
qiktrak  |       },
qiktrak  |       _events: [Object: null prototype] {
qiktrak  |         end: [Function: onReadableStreamEnd],
qiktrak  |         free: [Function: onFree],
qiktrak  |         close: [ [Function: onClose], [Function: socketCloseListener] ],
qiktrak  |         timeout: [Function: onTimeout],
qiktrak  |         agentRemove: [Function: onRemove],
qiktrak  |         error: [Function: socketErrorListener],
qiktrak  |         finish: [Function: bound onceWrapper] { listener: [Function: destroy] }
qiktrak  |       },
qiktrak  |       _eventsCount: 7,
qiktrak  |       _maxListeners: undefined,
qiktrak  |       _writableState: WritableState {
qiktrak  |         objectMode: false,
qiktrak  |         highWaterMark: 16384,
qiktrak  |         finalCalled: true,
qiktrak  |         needDrain: false,
qiktrak  |         ending: true,
qiktrak  |         ended: true,
qiktrak  |         finished: false,
qiktrak  |         destroyed: false,
qiktrak  |         decodeStrings: false,
qiktrak  |         defaultEncoding: 'utf8',
qiktrak  |         length: 0,
qiktrak  |         writing: false,
qiktrak  |         corked: 0,
qiktrak  |         sync: false,
qiktrak  |         bufferProcessing: false,
qiktrak  |         onwrite: [Function: bound onwrite],
qiktrak  |         writecb: null,
qiktrak  |         writelen: 0,
qiktrak  |         afterWriteTickInfo: null,
qiktrak  |         buffered: [],
qiktrak  |         bufferedIndex: 0,
qiktrak  |         allBuffers: true,
qiktrak  |         allNoop: true,
qiktrak  |         pendingcb: 1,
qiktrak  |         constructed: true,
qiktrak  |         prefinished: false,
qiktrak  |         errorEmitted: false,
qiktrak  |         emitClose: false,
qiktrak  |         autoDestroy: true,
qiktrak  |         errored: null,
qiktrak  |         closed: false,
qiktrak  |         closeEmitted: false,
qiktrak  |         [Symbol(kOnFinished)]: []
qiktrak  |       },
qiktrak  |       allowHalfOpen: false,
qiktrak  |       _sockname: null,
qiktrak  |       _pendingData: null,
qiktrak  |       _pendingEncoding: '',
qiktrak  |       server: null,
qiktrak  |       _server: null,
qiktrak  |       parser: null,
qiktrak  |       _httpMessage: [Circular *1],
qiktrak  |       [Symbol(async_id_symbol)]: 35,
qiktrak  |       [Symbol(kHandle)]: TCP {
qiktrak  |         reading: true,
qiktrak  |         onconnection: null,
qiktrak  |         [Symbol(owner_symbol)]: [Circular *2]
qiktrak  |       },
qiktrak  |       [Symbol(kSetNoDelay)]: false,
qiktrak  |       [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |       [Symbol(timeout)]: null,
qiktrak  |       [Symbol(kBuffer)]: null,
qiktrak  |       [Symbol(kBufferCb)]: null,
qiktrak  |       [Symbol(kBufferGen)]: null,
qiktrak  |       [Symbol(kCapture)]: false,
qiktrak  |       [Symbol(kBytesRead)]: 0,
qiktrak  |       [Symbol(kBytesWritten)]: 0,
qiktrak  |       [Symbol(RequestTimeout)]: undefined
qiktrak  |     },
qiktrak  |     _header: 'POST /v2/query HTTP/1.1\r\n' +
qiktrak  |       'Accept: application/json, text/plain, */*\r\n' +
qiktrak  |       'Content-Type: application/json\r\n' +
qiktrak  |       'X-Hasura-Admin-Secret: hasura\r\n' +
qiktrak  |       'User-Agent: axios/0.21.4\r\n' +
qiktrak  |       'Content-Length: 108\r\n' +
qiktrak  |       'Host: q_gql:8080\r\n' +
qiktrak  |       'Connection: close\r\n' +
qiktrak  |       '\r\n',
qiktrak  |     _keepAliveTimeout: 0,
qiktrak  |     _onPendingData: [Function: nop],
qiktrak  |     agent: Agent {
qiktrak  |       _events: [Object: null prototype] {
qiktrak  |         free: [Function (anonymous)],
qiktrak  |         newListener: [Function: maybeEnableKeylog]
qiktrak  |       },
qiktrak  |       _eventsCount: 2,
qiktrak  |       _maxListeners: undefined,
qiktrak  |       defaultPort: 80,
qiktrak  |       protocol: 'http:',
qiktrak  |       options: [Object: null prototype] { path: null },
qiktrak  |       requests: [Object: null prototype] {},
qiktrak  |       sockets: [Object: null prototype] {
qiktrak  |         'q_gql:8080:': [
qiktrak  |           <ref *2> Socket {
qiktrak  |             connecting: false,
qiktrak  |             _hadError: false,
qiktrak  |             _parent: null,
qiktrak  |             _host: 'q_gql',
qiktrak  |             _readableState: [ReadableState],
qiktrak  |             _events: [Object: null prototype],
qiktrak  |             _eventsCount: 7,
qiktrak  |             _maxListeners: undefined,
qiktrak  |             _writableState: [WritableState],
qiktrak  |             allowHalfOpen: false,
qiktrak  |             _sockname: null,
qiktrak  |             _pendingData: null,
qiktrak  |             _pendingEncoding: '',
qiktrak  |             server: null,
qiktrak  |             _server: null,
qiktrak  |             parser: null,
qiktrak  |             _httpMessage: [Circular *1],
qiktrak  |             [Symbol(async_id_symbol)]: 35,
qiktrak  |             [Symbol(kHandle)]: [TCP],
qiktrak  |             [Symbol(kSetNoDelay)]: false,
qiktrak  |             [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |             [Symbol(timeout)]: null,
qiktrak  |             [Symbol(kBuffer)]: null,
qiktrak  |             [Symbol(kBufferCb)]: null,
qiktrak  |             [Symbol(kBufferGen)]: null,
qiktrak  |             [Symbol(kCapture)]: false,
qiktrak  |             [Symbol(kBytesRead)]: 0,
qiktrak  |             [Symbol(kBytesWritten)]: 0,
qiktrak  |             [Symbol(RequestTimeout)]: undefined
qiktrak  |           }
qiktrak  |         ]
qiktrak  |       },
qiktrak  |       freeSockets: [Object: null prototype] {},
qiktrak  |       keepAliveMsecs: 1000,
qiktrak  |       keepAlive: false,
qiktrak  |       maxSockets: Infinity,
qiktrak  |       maxFreeSockets: 256,
qiktrak  |       scheduling: 'lifo',
qiktrak  |       maxTotalSockets: Infinity,
qiktrak  |       totalSocketCount: 1,
qiktrak  |       [Symbol(kCapture)]: false
qiktrak  |     },
qiktrak  |     socketPath: undefined,
qiktrak  |     method: 'POST',
qiktrak  |     maxHeaderSize: undefined,
qiktrak  |     insecureHTTPParser: undefined,
qiktrak  |     path: '/v2/query',
qiktrak  |     _ended: true,
qiktrak  |     res: IncomingMessage {
qiktrak  |       _readableState: ReadableState {
qiktrak  |         objectMode: false,
qiktrak  |         highWaterMark: 16384,
qiktrak  |         buffer: BufferList { head: null, tail: null, length: 0 },
qiktrak  |         length: 0,
qiktrak  |         pipes: [],
qiktrak  |         flowing: true,
qiktrak  |         ended: true,
qiktrak  |         endEmitted: true,
qiktrak  |         reading: false,
qiktrak  |         constructed: true,
qiktrak  |         sync: true,
qiktrak  |         needReadable: false,
qiktrak  |         emittedReadable: false,
qiktrak  |         readableListening: false,
qiktrak  |         resumeScheduled: false,
qiktrak  |         errorEmitted: false,
qiktrak  |         emitClose: true,
qiktrak  |         autoDestroy: true,
qiktrak  |         destroyed: true,
qiktrak  |         errored: null,
qiktrak  |         closed: true,
qiktrak  |         closeEmitted: true,
qiktrak  |         defaultEncoding: 'utf8',
qiktrak  |         awaitDrainWriters: null,
qiktrak  |         multiAwaitDrain: false,
qiktrak  |         readingMore: true,
qiktrak  |         dataEmitted: true,
qiktrak  |         decoder: null,
qiktrak  |         encoding: null,
qiktrak  |         [Symbol(kPaused)]: false
qiktrak  |       },
qiktrak  |       _events: [Object: null prototype] {
qiktrak  |         end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
qiktrak  |         data: [Function: handleStreamData],
qiktrak  |         error: [Function: handleStreamError]
qiktrak  |       },
qiktrak  |       _eventsCount: 3,
qiktrak  |       _maxListeners: undefined,
qiktrak  |       socket: <ref *2> Socket {
qiktrak  |         connecting: false,
qiktrak  |         _hadError: false,
qiktrak  |         _parent: null,
qiktrak  |         _host: 'q_gql',
qiktrak  |         _readableState: ReadableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           buffer: BufferList { head: null, tail: null, length: 0 },
qiktrak  |           length: 0,
qiktrak  |           pipes: [],
qiktrak  |           flowing: true,
qiktrak  |           ended: false,
qiktrak  |           endEmitted: false,
qiktrak  |           reading: true,
qiktrak  |           constructed: true,
qiktrak  |           sync: false,
qiktrak  |           needReadable: true,
qiktrak  |           emittedReadable: false,
qiktrak  |           readableListening: false,
qiktrak  |           resumeScheduled: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: false,
qiktrak  |           autoDestroy: true,
qiktrak  |           destroyed: false,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           awaitDrainWriters: null,
qiktrak  |           multiAwaitDrain: false,
qiktrak  |           readingMore: false,
qiktrak  |           dataEmitted: true,
qiktrak  |           decoder: null,
qiktrak  |           encoding: null,
qiktrak  |           [Symbol(kPaused)]: false
qiktrak  |         },
qiktrak  |         _events: [Object: null prototype] {
qiktrak  |           end: [Function: onReadableStreamEnd],
qiktrak  |           free: [Function: onFree],
qiktrak  |           close: [ [Function: onClose], [Function: socketCloseListener] ],
qiktrak  |           timeout: [Function: onTimeout],
qiktrak  |           agentRemove: [Function: onRemove],
qiktrak  |           error: [Function: socketErrorListener],
qiktrak  |           finish: [Function: bound onceWrapper] {
qiktrak  |             listener: [Function: destroy]
qiktrak  |           }
qiktrak  |         },
qiktrak  |         _eventsCount: 7,
qiktrak  |         _maxListeners: undefined,
qiktrak  |         _writableState: WritableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           finalCalled: true,
qiktrak  |           needDrain: false,
qiktrak  |           ending: true,
qiktrak  |           ended: true,
qiktrak  |           finished: false,
qiktrak  |           destroyed: false,
qiktrak  |           decodeStrings: false,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           length: 0,
qiktrak  |           writing: false,
qiktrak  |           corked: 0,
qiktrak  |           sync: false,
qiktrak  |           bufferProcessing: false,
qiktrak  |           onwrite: [Function: bound onwrite],
qiktrak  |           writecb: null,
qiktrak  |           writelen: 0,
qiktrak  |           afterWriteTickInfo: null,
qiktrak  |           buffered: [],
qiktrak  |           bufferedIndex: 0,
qiktrak  |           allBuffers: true,
qiktrak  |           allNoop: true,
qiktrak  |           pendingcb: 1,
qiktrak  |           constructed: true,
qiktrak  |           prefinished: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: false,
qiktrak  |           autoDestroy: true,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           [Symbol(kOnFinished)]: []
qiktrak  |         },
qiktrak  |         allowHalfOpen: false,
qiktrak  |         _sockname: null,
qiktrak  |         _pendingData: null,
qiktrak  |         _pendingEncoding: '',
qiktrak  |         server: null,
qiktrak  |         _server: null,
qiktrak  |         parser: null,
qiktrak  |         _httpMessage: [Circular *1],
qiktrak  |         [Symbol(async_id_symbol)]: 35,
qiktrak  |         [Symbol(kHandle)]: TCP {
qiktrak  |           reading: true,
qiktrak  |           onconnection: null,
qiktrak  |           [Symbol(owner_symbol)]: [Circular *2]
qiktrak  |         },
qiktrak  |         [Symbol(kSetNoDelay)]: false,
qiktrak  |         [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |         [Symbol(timeout)]: null,
qiktrak  |         [Symbol(kBuffer)]: null,
qiktrak  |         [Symbol(kBufferCb)]: null,
qiktrak  |         [Symbol(kBufferGen)]: null,
qiktrak  |         [Symbol(kCapture)]: false,
qiktrak  |         [Symbol(kBytesRead)]: 0,
qiktrak  |         [Symbol(kBytesWritten)]: 0,
qiktrak  |         [Symbol(RequestTimeout)]: undefined
qiktrak  |       },
qiktrak  |       httpVersionMajor: 1,
qiktrak  |       httpVersionMinor: 1,
qiktrak  |       httpVersion: '1.1',
qiktrak  |       complete: true,
qiktrak  |       rawHeaders: [
qiktrak  |         'Transfer-Encoding',
qiktrak  |         'chunked',
qiktrak  |         'Date',
qiktrak  |         'Thu, 20 Jan 2022 00:04:55 GMT',
qiktrak  |         'Server',
qiktrak  |         'Warp/3.3.14',
qiktrak  |         'Content-Type',
qiktrak  |         'application/json; charset=utf-8'
qiktrak  |       ],
qiktrak  |       rawTrailers: [],
qiktrak  |       aborted: false,
qiktrak  |       upgrade: false,
qiktrak  |       url: '',
qiktrak  |       method: null,
qiktrak  |       statusCode: 400,
qiktrak  |       statusMessage: 'Bad Request',
qiktrak  |       client: <ref *2> Socket {
qiktrak  |         connecting: false,
qiktrak  |         _hadError: false,
qiktrak  |         _parent: null,
qiktrak  |         _host: 'q_gql',
qiktrak  |         _readableState: ReadableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           buffer: BufferList { head: null, tail: null, length: 0 },
qiktrak  |           length: 0,
qiktrak  |           pipes: [],
qiktrak  |           flowing: true,
qiktrak  |           ended: false,
qiktrak  |           endEmitted: false,
qiktrak  |           reading: true,
qiktrak  |           constructed: true,
qiktrak  |           sync: false,
qiktrak  |           needReadable: true,
qiktrak  |           emittedReadable: false,
qiktrak  |           readableListening: false,
qiktrak  |           resumeScheduled: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: false,
qiktrak  |           autoDestroy: true,
qiktrak  |           destroyed: false,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           awaitDrainWriters: null,
qiktrak  |           multiAwaitDrain: false,
qiktrak  |           readingMore: false,
qiktrak  |           dataEmitted: true,
qiktrak  |           decoder: null,
qiktrak  |           encoding: null,
qiktrak  |           [Symbol(kPaused)]: false
qiktrak  |         },
qiktrak  |         _events: [Object: null prototype] {
qiktrak  |           end: [Function: onReadableStreamEnd],
qiktrak  |           free: [Function: onFree],
qiktrak  |           close: [ [Function: onClose], [Function: socketCloseListener] ],
qiktrak  |           timeout: [Function: onTimeout],
qiktrak  |           agentRemove: [Function: onRemove],
qiktrak  |           error: [Function: socketErrorListener],
qiktrak  |           finish: [Function: bound onceWrapper] {
qiktrak  |             listener: [Function: destroy]
qiktrak  |           }
qiktrak  |         },
qiktrak  |         _eventsCount: 7,
qiktrak  |         _maxListeners: undefined,
qiktrak  |         _writableState: WritableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           finalCalled: true,
qiktrak  |           needDrain: false,
qiktrak  |           ending: true,
qiktrak  |           ended: true,
qiktrak  |           finished: false,
qiktrak  |           destroyed: false,
qiktrak  |           decodeStrings: false,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           length: 0,
qiktrak  |           writing: false,
qiktrak  |           corked: 0,
qiktrak  |           sync: false,
qiktrak  |           bufferProcessing: false,
qiktrak  |           onwrite: [Function: bound onwrite],
qiktrak  |           writecb: null,
qiktrak  |           writelen: 0,
qiktrak  |           afterWriteTickInfo: null,
qiktrak  |           buffered: [],
qiktrak  |           bufferedIndex: 0,
qiktrak  |           allBuffers: true,
qiktrak  |           allNoop: true,
qiktrak  |           pendingcb: 1,
qiktrak  |           constructed: true,
qiktrak  |           prefinished: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: false,
qiktrak  |           autoDestroy: true,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           [Symbol(kOnFinished)]: []
qiktrak  |         },
qiktrak  |         allowHalfOpen: false,
qiktrak  |         _sockname: null,
qiktrak  |         _pendingData: null,
qiktrak  |         _pendingEncoding: '',
qiktrak  |         server: null,
qiktrak  |         _server: null,
qiktrak  |         parser: null,
qiktrak  |         _httpMessage: [Circular *1],
qiktrak  |         [Symbol(async_id_symbol)]: 35,
qiktrak  |         [Symbol(kHandle)]: TCP {
qiktrak  |           reading: true,
qiktrak  |           onconnection: null,
qiktrak  |           [Symbol(owner_symbol)]: [Circular *2]
qiktrak  |         },
qiktrak  |         [Symbol(kSetNoDelay)]: false,
qiktrak  |         [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |         [Symbol(timeout)]: null,
qiktrak  |         [Symbol(kBuffer)]: null,
qiktrak  |         [Symbol(kBufferCb)]: null,
qiktrak  |         [Symbol(kBufferGen)]: null,
qiktrak  |         [Symbol(kCapture)]: false,
qiktrak  |         [Symbol(kBytesRead)]: 0,
qiktrak  |         [Symbol(kBytesWritten)]: 0,
qiktrak  |         [Symbol(RequestTimeout)]: undefined
qiktrak  |       },
qiktrak  |       _consuming: false,
qiktrak  |       _dumped: false,
qiktrak  |       req: [Circular *1],
qiktrak  |       responseUrl: 'http://q_gql:8080/v2/query',
qiktrak  |       redirects: [],
qiktrak  |       [Symbol(kCapture)]: false,
qiktrak  |       [Symbol(kHeaders)]: {
qiktrak  |         'transfer-encoding': 'chunked',
qiktrak  |         date: 'Thu, 20 Jan 2022 00:04:55 GMT',
qiktrak  |         server: 'Warp/3.3.14',
qiktrak  |         'content-type': 'application/json; charset=utf-8'
qiktrak  |       },
qiktrak  |       [Symbol(kHeadersCount)]: 8,
qiktrak  |       [Symbol(kTrailers)]: null,
qiktrak  |       [Symbol(kTrailersCount)]: 0,
qiktrak  |       [Symbol(RequestTimeout)]: undefined
qiktrak  |     },
qiktrak  |     aborted: false,
qiktrak  |     timeoutCb: null,
qiktrak  |     upgradeOrConnect: false,
qiktrak  |     parser: null,
qiktrak  |     maxHeadersCount: null,
qiktrak  |     reusedSocket: false,
qiktrak  |     host: 'q_gql',
qiktrak  |     protocol: 'http:',
qiktrak  |     _redirectable: Writable {
qiktrak  |       _writableState: WritableState {
qiktrak  |         objectMode: false,
qiktrak  |         highWaterMark: 16384,
qiktrak  |         finalCalled: false,
qiktrak  |         needDrain: false,
qiktrak  |         ending: false,
qiktrak  |         ended: false,
qiktrak  |         finished: false,
qiktrak  |         destroyed: false,
qiktrak  |         decodeStrings: true,
qiktrak  |         defaultEncoding: 'utf8',
qiktrak  |         length: 0,
qiktrak  |         writing: false,
qiktrak  |         corked: 0,
qiktrak  |         sync: true,
qiktrak  |         bufferProcessing: false,
qiktrak  |         onwrite: [Function: bound onwrite],
qiktrak  |         writecb: null,
qiktrak  |         writelen: 0,
qiktrak  |         afterWriteTickInfo: null,
qiktrak  |         buffered: [],
qiktrak  |         bufferedIndex: 0,
qiktrak  |         allBuffers: true,
qiktrak  |         allNoop: true,
qiktrak  |         pendingcb: 0,
qiktrak  |         constructed: true,
qiktrak  |         prefinished: false,
qiktrak  |         errorEmitted: false,
qiktrak  |         emitClose: true,
qiktrak  |         autoDestroy: true,
qiktrak  |         errored: null,
qiktrak  |         closed: false,
qiktrak  |         closeEmitted: false,
qiktrak  |         [Symbol(kOnFinished)]: []
qiktrak  |       },
qiktrak  |       _events: [Object: null prototype] {
qiktrak  |         response: [Function: handleResponse],
qiktrak  |         error: [Function: handleRequestError]
qiktrak  |       },
qiktrak  |       _eventsCount: 2,
qiktrak  |       _maxListeners: undefined,
qiktrak  |       _options: {
qiktrak  |         maxRedirects: 21,
qiktrak  |         maxBodyLength: 10485760,
qiktrak  |         protocol: 'http:',
qiktrak  |         path: '/v2/query',
qiktrak  |         method: 'POST',
qiktrak  |         headers: {
qiktrak  |           Accept: 'application/json, text/plain, */*',
qiktrak  |           'Content-Type': 'application/json',
qiktrak  |           'X-Hasura-Admin-Secret': 'hasura',
qiktrak  |           'User-Agent': 'axios/0.21.4',
qiktrak  |           'Content-Length': 108
qiktrak  |         },
qiktrak  |         agent: undefined,
qiktrak  |         agents: { http: undefined, https: undefined },
qiktrak  |         auth: undefined,
qiktrak  |         hostname: 'q_gql',
qiktrak  |         port: '8080',
qiktrak  |         nativeProtocols: {
qiktrak  |           'http:': {
qiktrak  |             _connectionListener: [Function: connectionListener],
qiktrak  |             METHODS: [Array],
qiktrak  |             STATUS_CODES: [Object],
qiktrak  |             Agent: [Function],
qiktrak  |             ClientRequest: [Function: ClientRequest],
qiktrak  |             IncomingMessage: [Function: IncomingMessage],
qiktrak  |             OutgoingMessage: [Function: OutgoingMessage],
qiktrak  |             Server: [Function: Server],
qiktrak  |             ServerResponse: [Function: ServerResponse],
qiktrak  |             createServer: [Function: createServer],
qiktrak  |             validateHeaderName: [Function: __node_internal_],
qiktrak  |             validateHeaderValue: [Function: __node_internal_],
qiktrak  |             get: [Function: get],
qiktrak  |             request: [Function: request],
qiktrak  |             maxHeaderSize: [Getter],
qiktrak  |             globalAgent: [Getter/Setter]
qiktrak  |           },
qiktrak  |           'https:': {
qiktrak  |             Agent: [Function: Agent],
qiktrak  |             globalAgent: [Agent],
qiktrak  |             Server: [Function: Server],
qiktrak  |             createServer: [Function: createServer],
qiktrak  |             get: [Function: get],
qiktrak  |             request: [Function: request]
qiktrak  |           }
qiktrak  |         },
qiktrak  |         pathname: '/v2/query'
qiktrak  |       },
qiktrak  |       _ended: true,
qiktrak  |       _ending: true,
qiktrak  |       _redirectCount: 0,
qiktrak  |       _redirects: [],
qiktrak  |       _requestBodyLength: 108,
qiktrak  |       _requestBodyBuffers: [],
qiktrak  |       _onNativeResponse: [Function (anonymous)],
qiktrak  |       _currentRequest: [Circular *1],
qiktrak  |       _currentUrl: 'http://q_gql:8080/v2/query',
qiktrak  |       [Symbol(kCapture)]: false
qiktrak  |     },
qiktrak  |     [Symbol(kCapture)]: false,
qiktrak  |     [Symbol(kNeedDrain)]: false,
qiktrak  |     [Symbol(corked)]: 0,
qiktrak  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
qiktrak  |       accept: [ 'Accept', 'application/json, text/plain, */*' ],
qiktrak  |       'content-type': [ 'Content-Type', 'application/json' ],
qiktrak  |       'x-hasura-admin-secret': [ 'X-Hasura-Admin-Secret', 'hasura' ],
qiktrak  |       'user-agent': [ 'User-Agent', 'axios/0.21.4' ],
qiktrak  |       'content-length': [ 'Content-Length', 108 ],
qiktrak  |       host: [ 'Host', 'q_gql:8080' ]
qiktrak  |     }
qiktrak  |   },
qiktrak  |   response: {
qiktrak  |     status: 400,
qiktrak  |     statusText: 'Bad Request',
qiktrak  |     headers: {
qiktrak  |       'transfer-encoding': 'chunked',
qiktrak  |       date: 'Thu, 20 Jan 2022 00:04:55 GMT',
qiktrak  |       server: 'Warp/3.3.14',
qiktrak  |       'content-type': 'application/json; charset=utf-8'
qiktrak  |     },
qiktrak  |     config: {
qiktrak  |       url: 'http://q_gql:8080/v2/query',
qiktrak  |       method: 'post',
qiktrak  |       data: '{"type":"run_sql","args":{"sql":"--- The create database process is now integrated with Hasura migrations"}}',
qiktrak  |       headers: {
qiktrak  |         Accept: 'application/json, text/plain, */*',
qiktrak  |         'Content-Type': 'application/json',
qiktrak  |         'X-Hasura-Admin-Secret': 'hasura',
qiktrak  |         'User-Agent': 'axios/0.21.4',
qiktrak  |         'Content-Length': 108
qiktrak  |       },
qiktrak  |       transformRequest: [ [Function: transformRequest] ],
qiktrak  |       transformResponse: [ [Function: transformResponse] ],
qiktrak  |       timeout: 0,
qiktrak  |       adapter: [Function: httpAdapter],
qiktrak  |       xsrfCookieName: 'XSRF-TOKEN',
qiktrak  |       xsrfHeaderName: 'X-XSRF-TOKEN',
qiktrak  |       maxContentLength: -1,
qiktrak  |       maxBodyLength: -1,
qiktrak  |       validateStatus: [Function: validateStatus],
qiktrak  |       transitional: {
qiktrak  |         silentJSONParsing: true,
qiktrak  |         forcedJSONParsing: true,
qiktrak  |         clarifyTimeoutError: false
qiktrak  |       }
qiktrak  |     },
qiktrak  |     request: <ref *1> ClientRequest {
qiktrak  |       _events: [Object: null prototype] {
qiktrak  |         abort: [Function (anonymous)],
qiktrak  |         aborted: [Function (anonymous)],
qiktrak  |         connect: [Function (anonymous)],
qiktrak  |         error: [Function (anonymous)],
qiktrak  |         socket: [Function (anonymous)],
qiktrak  |         timeout: [Function (anonymous)],
qiktrak  |         prefinish: [Function: requestOnPrefinish]
qiktrak  |       },
qiktrak  |       _eventsCount: 7,
qiktrak  |       _maxListeners: undefined,
qiktrak  |       outputData: [],
qiktrak  |       outputSize: 0,
qiktrak  |       writable: true,
qiktrak  |       destroyed: false,
qiktrak  |       _last: true,
qiktrak  |       chunkedEncoding: false,
qiktrak  |       shouldKeepAlive: false,
qiktrak  |       maxRequestsOnConnectionReached: false,
qiktrak  |       _defaultKeepAlive: true,
qiktrak  |       useChunkedEncodingByDefault: true,
qiktrak  |       sendDate: false,
qiktrak  |       _removedConnection: false,
qiktrak  |       _removedContLen: false,
qiktrak  |       _removedTE: false,
qiktrak  |       _contentLength: null,
qiktrak  |       _hasBody: true,
qiktrak  |       _trailer: '',
qiktrak  |       finished: true,
qiktrak  |       _headerSent: true,
qiktrak  |       _closed: false,
qiktrak  |       socket: <ref *2> Socket {
qiktrak  |         connecting: false,
qiktrak  |         _hadError: false,
qiktrak  |         _parent: null,
qiktrak  |         _host: 'q_gql',
qiktrak  |         _readableState: ReadableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           buffer: BufferList { head: null, tail: null, length: 0 },
qiktrak  |           length: 0,
qiktrak  |           pipes: [],
qiktrak  |           flowing: true,
qiktrak  |           ended: false,
qiktrak  |           endEmitted: false,
qiktrak  |           reading: true,
qiktrak  |           constructed: true,
qiktrak  |           sync: false,
qiktrak  |           needReadable: true,
qiktrak  |           emittedReadable: false,
qiktrak  |           readableListening: false,
qiktrak  |           resumeScheduled: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: false,
qiktrak  |           autoDestroy: true,
qiktrak  |           destroyed: false,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           awaitDrainWriters: null,
qiktrak  |           multiAwaitDrain: false,
qiktrak  |           readingMore: false,
qiktrak  |           dataEmitted: true,
qiktrak  |           decoder: null,
qiktrak  |           encoding: null,
qiktrak  |           [Symbol(kPaused)]: false
qiktrak  |         },
qiktrak  |         _events: [Object: null prototype] {
qiktrak  |           end: [Function: onReadableStreamEnd],
qiktrak  |           free: [Function: onFree],
qiktrak  |           close: [ [Function: onClose], [Function: socketCloseListener] ],
qiktrak  |           timeout: [Function: onTimeout],
qiktrak  |           agentRemove: [Function: onRemove],
qiktrak  |           error: [Function: socketErrorListener],
qiktrak  |           finish: [Function: bound onceWrapper] {
qiktrak  |             listener: [Function: destroy]
qiktrak  |           }
qiktrak  |         },
qiktrak  |         _eventsCount: 7,
qiktrak  |         _maxListeners: undefined,
qiktrak  |         _writableState: WritableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           finalCalled: true,
qiktrak  |           needDrain: false,
qiktrak  |           ending: true,
qiktrak  |           ended: true,
qiktrak  |           finished: false,
qiktrak  |           destroyed: false,
qiktrak  |           decodeStrings: false,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           length: 0,
qiktrak  |           writing: false,
qiktrak  |           corked: 0,
qiktrak  |           sync: false,
qiktrak  |           bufferProcessing: false,
qiktrak  |           onwrite: [Function: bound onwrite],
qiktrak  |           writecb: null,
qiktrak  |           writelen: 0,
qiktrak  |           afterWriteTickInfo: null,
qiktrak  |           buffered: [],
qiktrak  |           bufferedIndex: 0,
qiktrak  |           allBuffers: true,
qiktrak  |           allNoop: true,
qiktrak  |           pendingcb: 1,
qiktrak  |           constructed: true,
qiktrak  |           prefinished: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: false,
qiktrak  |           autoDestroy: true,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           [Symbol(kOnFinished)]: []
qiktrak  |         },
qiktrak  |         allowHalfOpen: false,
qiktrak  |         _sockname: null,
qiktrak  |         _pendingData: null,
qiktrak  |         _pendingEncoding: '',
qiktrak  |         server: null,
qiktrak  |         _server: null,
qiktrak  |         parser: null,
qiktrak  |         _httpMessage: [Circular *1],
qiktrak  |         [Symbol(async_id_symbol)]: 35,
qiktrak  |         [Symbol(kHandle)]: TCP {
qiktrak  |           reading: true,
qiktrak  |           onconnection: null,
qiktrak  |           [Symbol(owner_symbol)]: [Circular *2]
qiktrak  |         },
qiktrak  |         [Symbol(kSetNoDelay)]: false,
qiktrak  |         [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |         [Symbol(timeout)]: null,
qiktrak  |         [Symbol(kBuffer)]: null,
qiktrak  |         [Symbol(kBufferCb)]: null,
qiktrak  |         [Symbol(kBufferGen)]: null,
qiktrak  |         [Symbol(kCapture)]: false,
qiktrak  |         [Symbol(kBytesRead)]: 0,
qiktrak  |         [Symbol(kBytesWritten)]: 0,
qiktrak  |         [Symbol(RequestTimeout)]: undefined
qiktrak  |       },
qiktrak  |       _header: 'POST /v2/query HTTP/1.1\r\n' +
qiktrak  |         'Accept: application/json, text/plain, */*\r\n' +
qiktrak  |         'Content-Type: application/json\r\n' +
qiktrak  |         'X-Hasura-Admin-Secret: hasura\r\n' +
qiktrak  |         'User-Agent: axios/0.21.4\r\n' +
qiktrak  |         'Content-Length: 108\r\n' +
qiktrak  |         'Host: q_gql:8080\r\n' +
qiktrak  |         'Connection: close\r\n' +
qiktrak  |         '\r\n',
qiktrak  |       _keepAliveTimeout: 0,
qiktrak  |       _onPendingData: [Function: nop],
qiktrak  |       agent: Agent {
qiktrak  |         _events: [Object: null prototype] {
qiktrak  |           free: [Function (anonymous)],
qiktrak  |           newListener: [Function: maybeEnableKeylog]
qiktrak  |         },
qiktrak  |         _eventsCount: 2,
qiktrak  |         _maxListeners: undefined,
qiktrak  |         defaultPort: 80,
qiktrak  |         protocol: 'http:',
qiktrak  |         options: [Object: null prototype] { path: null },
qiktrak  |         requests: [Object: null prototype] {},
qiktrak  |         sockets: [Object: null prototype] { 'q_gql:8080:': [ [Socket] ] },
qiktrak  |         freeSockets: [Object: null prototype] {},
qiktrak  |         keepAliveMsecs: 1000,
qiktrak  |         keepAlive: false,
qiktrak  |         maxSockets: Infinity,
qiktrak  |         maxFreeSockets: 256,
qiktrak  |         scheduling: 'lifo',
qiktrak  |         maxTotalSockets: Infinity,
qiktrak  |         totalSocketCount: 1,
qiktrak  |         [Symbol(kCapture)]: false
qiktrak  |       },
qiktrak  |       socketPath: undefined,
qiktrak  |       method: 'POST',
qiktrak  |       maxHeaderSize: undefined,
qiktrak  |       insecureHTTPParser: undefined,
qiktrak  |       path: '/v2/query',
qiktrak  |       _ended: true,
qiktrak  |       res: IncomingMessage {
qiktrak  |         _readableState: ReadableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           buffer: BufferList { head: null, tail: null, length: 0 },
qiktrak  |           length: 0,
qiktrak  |           pipes: [],
qiktrak  |           flowing: true,
qiktrak  |           ended: true,
qiktrak  |           endEmitted: true,
qiktrak  |           reading: false,
qiktrak  |           constructed: true,
qiktrak  |           sync: true,
qiktrak  |           needReadable: false,
qiktrak  |           emittedReadable: false,
qiktrak  |           readableListening: false,
qiktrak  |           resumeScheduled: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: true,
qiktrak  |           autoDestroy: true,
qiktrak  |           destroyed: true,
qiktrak  |           errored: null,
qiktrak  |           closed: true,
qiktrak  |           closeEmitted: true,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           awaitDrainWriters: null,
qiktrak  |           multiAwaitDrain: false,
qiktrak  |           readingMore: true,
qiktrak  |           dataEmitted: true,
qiktrak  |           decoder: null,
qiktrak  |           encoding: null,
qiktrak  |           [Symbol(kPaused)]: false
qiktrak  |         },
qiktrak  |         _events: [Object: null prototype] {
qiktrak  |           end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
qiktrak  |           data: [Function: handleStreamData],
qiktrak  |           error: [Function: handleStreamError]
qiktrak  |         },
qiktrak  |         _eventsCount: 3,
qiktrak  |         _maxListeners: undefined,
qiktrak  |         socket: <ref *2> Socket {
qiktrak  |           connecting: false,
qiktrak  |           _hadError: false,
qiktrak  |           _parent: null,
qiktrak  |           _host: 'q_gql',
qiktrak  |           _readableState: ReadableState {
qiktrak  |             objectMode: false,
qiktrak  |             highWaterMark: 16384,
qiktrak  |             buffer: [BufferList],
qiktrak  |             length: 0,
qiktrak  |             pipes: [],
qiktrak  |             flowing: true,
qiktrak  |             ended: false,
qiktrak  |             endEmitted: false,
qiktrak  |             reading: true,
qiktrak  |             constructed: true,
qiktrak  |             sync: false,
qiktrak  |             needReadable: true,
qiktrak  |             emittedReadable: false,
qiktrak  |             readableListening: false,
qiktrak  |             resumeScheduled: false,
qiktrak  |             errorEmitted: false,
qiktrak  |             emitClose: false,
qiktrak  |             autoDestroy: true,
qiktrak  |             destroyed: false,
qiktrak  |             errored: null,
qiktrak  |             closed: false,
qiktrak  |             closeEmitted: false,
qiktrak  |             defaultEncoding: 'utf8',
qiktrak  |             awaitDrainWriters: null,
qiktrak  |             multiAwaitDrain: false,
qiktrak  |             readingMore: false,
qiktrak  |             dataEmitted: true,
qiktrak  |             decoder: null,
qiktrak  |             encoding: null,
qiktrak  |             [Symbol(kPaused)]: false
qiktrak  |           },
qiktrak  |           _events: [Object: null prototype] {
qiktrak  |             end: [Function: onReadableStreamEnd],
qiktrak  |             free: [Function: onFree],
qiktrak  |             close: [Array],
qiktrak  |             timeout: [Function: onTimeout],
qiktrak  |             agentRemove: [Function: onRemove],
qiktrak  |             error: [Function: socketErrorListener],
qiktrak  |             finish: [Function]
qiktrak  |           },
qiktrak  |           _eventsCount: 7,
qiktrak  |           _maxListeners: undefined,
qiktrak  |           _writableState: WritableState {
qiktrak  |             objectMode: false,
qiktrak  |             highWaterMark: 16384,
qiktrak  |             finalCalled: true,
qiktrak  |             needDrain: false,
qiktrak  |             ending: true,
qiktrak  |             ended: true,
qiktrak  |             finished: false,
qiktrak  |             destroyed: false,
qiktrak  |             decodeStrings: false,
qiktrak  |             defaultEncoding: 'utf8',
qiktrak  |             length: 0,
qiktrak  |             writing: false,
qiktrak  |             corked: 0,
qiktrak  |             sync: false,
qiktrak  |             bufferProcessing: false,
qiktrak  |             onwrite: [Function: bound onwrite],
qiktrak  |             writecb: null,
qiktrak  |             writelen: 0,
qiktrak  |             afterWriteTickInfo: null,
qiktrak  |             buffered: [],
qiktrak  |             bufferedIndex: 0,
qiktrak  |             allBuffers: true,
qiktrak  |             allNoop: true,
qiktrak  |             pendingcb: 1,
qiktrak  |             constructed: true,
qiktrak  |             prefinished: false,
qiktrak  |             errorEmitted: false,
qiktrak  |             emitClose: false,
qiktrak  |             autoDestroy: true,
qiktrak  |             errored: null,
qiktrak  |             closed: false,
qiktrak  |             closeEmitted: false,
qiktrak  |             [Symbol(kOnFinished)]: []
qiktrak  |           },
qiktrak  |           allowHalfOpen: false,
qiktrak  |           _sockname: null,
qiktrak  |           _pendingData: null,
qiktrak  |           _pendingEncoding: '',
qiktrak  |           server: null,
qiktrak  |           _server: null,
qiktrak  |           parser: null,
qiktrak  |           _httpMessage: [Circular *1],
qiktrak  |           [Symbol(async_id_symbol)]: 35,
qiktrak  |           [Symbol(kHandle)]: TCP {
qiktrak  |             reading: true,
qiktrak  |             onconnection: null,
qiktrak  |             [Symbol(owner_symbol)]: [Circular *2]
qiktrak  |           },
qiktrak  |           [Symbol(kSetNoDelay)]: false,
qiktrak  |           [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |           [Symbol(timeout)]: null,
qiktrak  |           [Symbol(kBuffer)]: null,
qiktrak  |           [Symbol(kBufferCb)]: null,
qiktrak  |           [Symbol(kBufferGen)]: null,
qiktrak  |           [Symbol(kCapture)]: false,
qiktrak  |           [Symbol(kBytesRead)]: 0,
qiktrak  |           [Symbol(kBytesWritten)]: 0,
qiktrak  |           [Symbol(RequestTimeout)]: undefined
qiktrak  |         },
qiktrak  |         httpVersionMajor: 1,
qiktrak  |         httpVersionMinor: 1,
qiktrak  |         httpVersion: '1.1',
qiktrak  |         complete: true,
qiktrak  |         rawHeaders: [
qiktrak  |           'Transfer-Encoding',
qiktrak  |           'chunked',
qiktrak  |           'Date',
qiktrak  |           'Thu, 20 Jan 2022 00:04:55 GMT',
qiktrak  |           'Server',
qiktrak  |           'Warp/3.3.14',
qiktrak  |           'Content-Type',
qiktrak  |           'application/json; charset=utf-8'
qiktrak  |         ],
qiktrak  |         rawTrailers: [],
qiktrak  |         aborted: false,
qiktrak  |         upgrade: false,
qiktrak  |         url: '',
qiktrak  |         method: null,
qiktrak  |         statusCode: 400,
qiktrak  |         statusMessage: 'Bad Request',
qiktrak  |         client: <ref *2> Socket {
qiktrak  |           connecting: false,
qiktrak  |           _hadError: false,
qiktrak  |           _parent: null,
qiktrak  |           _host: 'q_gql',
qiktrak  |           _readableState: ReadableState {
qiktrak  |             objectMode: false,
qiktrak  |             highWaterMark: 16384,
qiktrak  |             buffer: [BufferList],
qiktrak  |             length: 0,
qiktrak  |             pipes: [],
qiktrak  |             flowing: true,
qiktrak  |             ended: false,
qiktrak  |             endEmitted: false,
qiktrak  |             reading: true,
qiktrak  |             constructed: true,
qiktrak  |             sync: false,
qiktrak  |             needReadable: true,
qiktrak  |             emittedReadable: false,
qiktrak  |             readableListening: false,
qiktrak  |             resumeScheduled: false,
qiktrak  |             errorEmitted: false,
qiktrak  |             emitClose: false,
qiktrak  |             autoDestroy: true,
qiktrak  |             destroyed: false,
qiktrak  |             errored: null,
qiktrak  |             closed: false,
qiktrak  |             closeEmitted: false,
qiktrak  |             defaultEncoding: 'utf8',
qiktrak  |             awaitDrainWriters: null,
qiktrak  |             multiAwaitDrain: false,
qiktrak  |             readingMore: false,
qiktrak  |             dataEmitted: true,
qiktrak  |             decoder: null,
qiktrak  |             encoding: null,
qiktrak  |             [Symbol(kPaused)]: false
qiktrak  |           },
qiktrak  |           _events: [Object: null prototype] {
qiktrak  |             end: [Function: onReadableStreamEnd],
qiktrak  |             free: [Function: onFree],
qiktrak  |             close: [Array],
qiktrak  |             timeout: [Function: onTimeout],
qiktrak  |             agentRemove: [Function: onRemove],
qiktrak  |             error: [Function: socketErrorListener],
qiktrak  |             finish: [Function]
qiktrak  |           },
qiktrak  |           _eventsCount: 7,
qiktrak  |           _maxListeners: undefined,
qiktrak  |           _writableState: WritableState {
qiktrak  |             objectMode: false,
qiktrak  |             highWaterMark: 16384,
qiktrak  |             finalCalled: true,
qiktrak  |             needDrain: false,
qiktrak  |             ending: true,
qiktrak  |             ended: true,
qiktrak  |             finished: false,
qiktrak  |             destroyed: false,
qiktrak  |             decodeStrings: false,
qiktrak  |             defaultEncoding: 'utf8',
qiktrak  |             length: 0,
qiktrak  |             writing: false,
qiktrak  |             corked: 0,
qiktrak  |             sync: false,
qiktrak  |             bufferProcessing: false,
qiktrak  |             onwrite: [Function: bound onwrite],
qiktrak  |             writecb: null,
qiktrak  |             writelen: 0,
qiktrak  |             afterWriteTickInfo: null,
qiktrak  |             buffered: [],
qiktrak  |             bufferedIndex: 0,
qiktrak  |             allBuffers: true,
qiktrak  |             allNoop: true,
qiktrak  |             pendingcb: 1,
qiktrak  |             constructed: true,
qiktrak  |             prefinished: false,
qiktrak  |             errorEmitted: false,
qiktrak  |             emitClose: false,
qiktrak  |             autoDestroy: true,
qiktrak  |             errored: null,
qiktrak  |             closed: false,
qiktrak  |             closeEmitted: false,
qiktrak  |             [Symbol(kOnFinished)]: []
qiktrak  |           },
qiktrak  |           allowHalfOpen: false,
qiktrak  |           _sockname: null,
qiktrak  |           _pendingData: null,
qiktrak  |           _pendingEncoding: '',
qiktrak  |           server: null,
qiktrak  |           _server: null,
qiktrak  |           parser: null,
qiktrak  |           _httpMessage: [Circular *1],
qiktrak  |           [Symbol(async_id_symbol)]: 35,
qiktrak  |           [Symbol(kHandle)]: TCP {
qiktrak  |             reading: true,
qiktrak  |             onconnection: null,
qiktrak  |             [Symbol(owner_symbol)]: [Circular *2]
qiktrak  |           },
qiktrak  |           [Symbol(kSetNoDelay)]: false,
qiktrak  |           [Symbol(lastWriteQueueSize)]: 0,
qiktrak  |           [Symbol(timeout)]: null,
qiktrak  |           [Symbol(kBuffer)]: null,
qiktrak  |           [Symbol(kBufferCb)]: null,
qiktrak  |           [Symbol(kBufferGen)]: null,
qiktrak  |           [Symbol(kCapture)]: false,
qiktrak  |           [Symbol(kBytesRead)]: 0,
qiktrak  |           [Symbol(kBytesWritten)]: 0,
qiktrak  |           [Symbol(RequestTimeout)]: undefined
qiktrak  |         },
qiktrak  |         _consuming: false,
qiktrak  |         _dumped: false,
qiktrak  |         req: [Circular *1],
qiktrak  |         responseUrl: 'http://q_gql:8080/v2/query',
qiktrak  |         redirects: [],
qiktrak  |         [Symbol(kCapture)]: false,
qiktrak  |         [Symbol(kHeaders)]: {
qiktrak  |           'transfer-encoding': 'chunked',
qiktrak  |           date: 'Thu, 20 Jan 2022 00:04:55 GMT',
qiktrak  |           server: 'Warp/3.3.14',
qiktrak  |           'content-type': 'application/json; charset=utf-8'
qiktrak  |         },
qiktrak  |         [Symbol(kHeadersCount)]: 8,
qiktrak  |         [Symbol(kTrailers)]: null,
qiktrak  |         [Symbol(kTrailersCount)]: 0,
qiktrak  |         [Symbol(RequestTimeout)]: undefined
qiktrak  |       },
qiktrak  |       aborted: false,
qiktrak  |       timeoutCb: null,
qiktrak  |       upgradeOrConnect: false,
qiktrak  |       parser: null,
qiktrak  |       maxHeadersCount: null,
qiktrak  |       reusedSocket: false,
qiktrak  |       host: 'q_gql',
qiktrak  |       protocol: 'http:',
qiktrak  |       _redirectable: Writable {
qiktrak  |         _writableState: WritableState {
qiktrak  |           objectMode: false,
qiktrak  |           highWaterMark: 16384,
qiktrak  |           finalCalled: false,
qiktrak  |           needDrain: false,
qiktrak  |           ending: false,
qiktrak  |           ended: false,
qiktrak  |           finished: false,
qiktrak  |           destroyed: false,
qiktrak  |           decodeStrings: true,
qiktrak  |           defaultEncoding: 'utf8',
qiktrak  |           length: 0,
qiktrak  |           writing: false,
qiktrak  |           corked: 0,
qiktrak  |           sync: true,
qiktrak  |           bufferProcessing: false,
qiktrak  |           onwrite: [Function: bound onwrite],
qiktrak  |           writecb: null,
qiktrak  |           writelen: 0,
qiktrak  |           afterWriteTickInfo: null,
qiktrak  |           buffered: [],
qiktrak  |           bufferedIndex: 0,
qiktrak  |           allBuffers: true,
qiktrak  |           allNoop: true,
qiktrak  |           pendingcb: 0,
qiktrak  |           constructed: true,
qiktrak  |           prefinished: false,
qiktrak  |           errorEmitted: false,
qiktrak  |           emitClose: true,
qiktrak  |           autoDestroy: true,
qiktrak  |           errored: null,
qiktrak  |           closed: false,
qiktrak  |           closeEmitted: false,
qiktrak  |           [Symbol(kOnFinished)]: []
qiktrak  |         },
qiktrak  |         _events: [Object: null prototype] {
qiktrak  |           response: [Function: handleResponse],
qiktrak  |           error: [Function: handleRequestError]
qiktrak  |         },
qiktrak  |         _eventsCount: 2,
qiktrak  |         _maxListeners: undefined,
qiktrak  |         _options: {
qiktrak  |           maxRedirects: 21,
qiktrak  |           maxBodyLength: 10485760,
qiktrak  |           protocol: 'http:',
qiktrak  |           path: '/v2/query',
qiktrak  |           method: 'POST',
qiktrak  |           headers: {
qiktrak  |             Accept: 'application/json, text/plain, */*',
qiktrak  |             'Content-Type': 'application/json',
qiktrak  |             'X-Hasura-Admin-Secret': 'hasura',
qiktrak  |             'User-Agent': 'axios/0.21.4',
qiktrak  |             'Content-Length': 108
qiktrak  |           },
qiktrak  |           agent: undefined,
qiktrak  |           agents: { http: undefined, https: undefined },
qiktrak  |           auth: undefined,
qiktrak  |           hostname: 'q_gql',
qiktrak  |           port: '8080',
qiktrak  |           nativeProtocols: { 'http:': [Object], 'https:': [Object] },
qiktrak  |           pathname: '/v2/query'
qiktrak  |         },
qiktrak  |         _ended: true,
qiktrak  |         _ending: true,
qiktrak  |         _redirectCount: 0,
qiktrak  |         _redirects: [],
qiktrak  |         _requestBodyLength: 108,
qiktrak  |         _requestBodyBuffers: [],
qiktrak  |         _onNativeResponse: [Function (anonymous)],
qiktrak  |         _currentRequest: [Circular *1],
qiktrak  |         _currentUrl: 'http://q_gql:8080/v2/query',
qiktrak  |         [Symbol(kCapture)]: false
qiktrak  |       },
qiktrak  |       [Symbol(kCapture)]: false,
qiktrak  |       [Symbol(kNeedDrain)]: false,
qiktrak  |       [Symbol(corked)]: 0,
qiktrak  |       [Symbol(kOutHeaders)]: [Object: null prototype] {
qiktrak  |         accept: [ 'Accept', 'application/json, text/plain, */*' ],
qiktrak  |         'content-type': [ 'Content-Type', 'application/json' ],
qiktrak  |         'x-hasura-admin-secret': [ 'X-Hasura-Admin-Secret', 'hasura' ],
qiktrak  |         'user-agent': [ 'User-Agent', 'axios/0.21.4' ],
qiktrak  |         'content-length': [ 'Content-Length', 108 ],
qiktrak  |         host: [ 'Host', 'q_gql:8080' ]
qiktrak  |       }
qiktrak  |     },
qiktrak  |     data: {
qiktrak  |       internal: {
qiktrak  |         statement: '--- The create database process is now integrated with Hasura migrations',
qiktrak  |         prepared: false,
qiktrak  |         error: {
qiktrak  |           exec_status: 'EmptyQuery',
qiktrak  |           hint: null,
qiktrak  |           message: null,
qiktrak  |           status_code: null,
qiktrak  |           description: null
qiktrak  |         },
qiktrak  |         arguments: []
qiktrak  |       },
qiktrak  |       path: '$',
qiktrak  |       error: 'query execution failed',
qiktrak  |       code: 'postgres-error'
qiktrak  |     }
qiktrak  |   },
qiktrak  |   isAxiosError: true,
qiktrak  |   toJSON: [Function: toJSON]
qiktrak  | }
qiktrak  | 
qiktrak  | Node.js v17.3.1
qiktrak exited with code 1

Removing qiktrak container
qiktrak

Applying custom metadata to Hasura
