[H[2J[3JBuild environment started
18:49:41

Transform environment variables from './template.env'
Import environment variables from './.env'

Create nginx config

Create Hasura console config

Stop containers

Start database and authentication containers

Pull qiktrak docker image
latest: Pulling from namsource/qiktrak
Digest: sha256:dbe8dd0e301d76bd2441679d03dab4681249faa11f8c3adbae61642edbb4874b
Status: Image is up to date for namsource/qiktrak:latest
docker.io/namsource/qiktrak:latest

Configure Keycloak
------------------------------------------------------------------------------------------------------------------------

KEYCLOAK INITIALISATION SCRIPT

------------------------------------------------------------------------------------------------------------------------

Waiting for containers to stabilise after startup...

Install JSON Query...

(microdnf:838): librhsm-[1;33mWARNING[0m **: [34m10:50:34.994[0m: Found 0 entitlement certificates

(microdnf:838): librhsm-[1;33mWARNING[0m **: [34m10:50:34.996[0m: Found 0 entitlement certificates

Login to Keycloak...
Logging into http://localhost:8080/auth as user admin of realm master

Create the realm: app
Created new realm with id 'app'

Create API user:  with password: api_pwd_scramble_me
Created new user with id '62906c31-2665-49ea-9a82-8ff994692ebf'

Create platform admin user: app_admin with password: password
Created new user with id 'e88218be-726f-4372-92a8-f71d0f3d291f'
Assign admin roles: app_admin with password: password
Role not found for name: app_admin

Create Australian tenant admin user: oz_app_admin with password: password
Created new user with id 'fa6126ac-d55b-4d75-8372-7abdc5e6a179'
Assign tenant_admin roles: oz_app_admin with password: password

Create Scottish tenant admin user: scot_app_admin with password: password
Created new user with id '4d22ddfa-15be-4abb-b477-a29528d66f5d'
Assign tenant_admin roles: scot_app_admin with password: password

Create test user for 'perth' tenant: app_user with password: password
Created new user with id '78d4a9d1-624a-40d7-8276-89f9c29d1b7c'

Capture the realm public key...
Captured the realm public key into:/docker-entrypoint-initdb.d/private_data/token.env
Test authentication - request token for: oz_app_admin

Bearer token captured into: /docker-entrypoint-initdb.d/private_data/auth_token.json

** NOTE FOR DEBUGGING
Goto: https://jwt.io/ and paste the whole contents of the file into debugger web page
You can then verify all the components of the JWT token are in place with expected values.


Start Hasura GraphQL container

Execute qiktrak...
Allow Hasura container to stabilise
Attaching to qiktrak
qiktrak  | --------------------------------------------------------------
qiktrak  | 
qiktrak  | qik-track          : Rapid, intuitive Hasura tracking setup
qiktrak  | 
qiktrak  | DATABASE           : 'app'
qiktrak  | SCHEMA             : 'membership'
qiktrak  | 
qiktrak  | HASURA ENDPOINT    : 'http://q_gql:8080'
qiktrak  | PRIMARY KEY SUFFIX : '_id'
qiktrak  | 
qiktrak  | --------------------------------------------------------------
qiktrak  | 
qiktrak  | REMOVE PREVIOUS HASURA TRACKING DETAILS FOR TABLES AND VIEWS
qiktrak  | 
qiktrak  | EXECUTE SQL SCRIPTS BEFORE VIEW BUILDER
qiktrak  | 
qiktrak  |     EXECUTED           - /qiktrak/beforeScripts/1_create_db.sql
qiktrak  | GENERATE JSON VIEWS
qiktrak  |     BUILT              - /qiktrak/json_views/environment_data.json
qiktrak  |     BUILT              - /qiktrak/json_views/smart_watch_data.json
qiktrak  | 
qiktrak  | EXECUTE SQL SCRIPTS AFTER VIEW BUILDER
qiktrak  | 
qiktrak  |     EXECUTED           - /qiktrak/afterScripts/2_seed_data.sql
qiktrak  | 
qiktrak  | Configure HASURA TABLE/VIEW TRACKING
qiktrak  |     TRACK TABLE        - article_tags
qiktrak  |     TRACK TABLE        - articles
qiktrak  |     TRACK TABLE        - groups
qiktrak  |     TRACK TABLE        - iot_device_types
qiktrak  |     TRACK TABLE        - iot_devices
qiktrak  |     TRACK TABLE        - iot_environment
qiktrak  |     TRACK TABLE        - iot_messages
qiktrak  |     TRACK TABLE        - iot_smart_watch
qiktrak  |     TRACK TABLE        - members
qiktrak  |     TRACK TABLE        - roles
qiktrak  |     TRACK TABLE        - status
qiktrak  |     TRACK TABLE        - tags
qiktrak  |     TRACK TABLE        - tenants
qiktrak  | 
qiktrak  |     ARRAY RELATIONSHIP - groups -> groups where groups.leader_id matches members.member_id
qiktrak  |     ARRAY RELATIONSHIP - groups -> groups where groups.tenant_id matches tenants.name
qiktrak  |     ARRAY RELATIONSHIP - members -> members where members.role_id matches roles.role_id
qiktrak  |     ARRAY RELATIONSHIP - members -> members where members.status_id matches status.status_id
qiktrak  |     ARRAY RELATIONSHIP - members -> members where members.group_id matches groups.group_id
qiktrak  |     ARRAY RELATIONSHIP - members -> members where members.tenant_id matches tenants.name
qiktrak  |     ARRAY RELATIONSHIP - articles -> articles where articles.created_by matches members.member_id
qiktrak  |     ARRAY RELATIONSHIP - article_tags -> article_tags where article_tags.tag_id matches tags.tag_id
qiktrak  |     ARRAY RELATIONSHIP - article_tags -> article_tags where article_tags.article_id matches articles.article_id
qiktrak  |     ARRAY RELATIONSHIP - iot_devices -> iot_devices where iot_devices.member_id matches members.member_id
qiktrak  |     ARRAY RELATIONSHIP - iot_devices -> iot_devices where iot_devices.device_type_id matches iot_device_types.name
qiktrak  |     ARRAY RELATIONSHIP - iot_messages -> iot_messages where iot_messages.device_id matches iot_devices.device_id
qiktrak  |     ARRAY RELATIONSHIP - iot_environment -> iot_environment where iot_environment.message_id matches iot_messages.message_id
qiktrak  |     ARRAY RELATIONSHIP - iot_smart_watch -> iot_smart_watch where iot_smart_watch.message_id matches iot_messages.message_id
qiktrak  | 
qiktrak  |    OBJECT RELATIONSHIP - status is members referencing status using status_id
qiktrak  |    OBJECT RELATIONSHIP - leader is groups referencing members using leader_id
qiktrak  |    OBJECT RELATIONSHIP - tenant is groups referencing tenants using tenant_id
qiktrak  |    OBJECT RELATIONSHIP - group is members referencing groups using group_id
qiktrak  |    OBJECT RELATIONSHIP - tag is article_tags referencing tags using tag_id
qiktrak  |    OBJECT RELATIONSHIP - member is iot_devices referencing members using member_id
qiktrak  |    OBJECT RELATIONSHIP - article is article_tags referencing articles using article_id
qiktrak  |    OBJECT RELATIONSHIP - tenant is members referencing tenants using tenant_id
qiktrak  |    OBJECT RELATIONSHIP - created_by is articles referencing members using created_by
qiktrak  |    OBJECT RELATIONSHIP - role is members referencing roles using role_id
qiktrak  |    OBJECT RELATIONSHIP - device_type is iot_devices referencing iot_device_types using device_type_id
qiktrak  |    OBJECT RELATIONSHIP - device is iot_messages referencing iot_devices using device_id
qiktrak  |    OBJECT RELATIONSHIP - message is iot_environment referencing iot_messages using message_id
qiktrak  |    OBJECT RELATIONSHIP - message is iot_smart_watch referencing iot_messages using message_id
qiktrak exited with code 0

Removing qiktrak container
qiktrak

Applying database migrations

Applying custom metadata to Hasura

Listing any metadata inconsistencies...

Build environment finished.
18:51:49

Check the above output for warnings and errors
