version: '3.6'

services:

# Used by Keycloak and GraphQL
# The db container is only needed if you don't have a cloud based database service. It's ideal for prototyping and local development.
    db:
        env_file: .env

        container_name: q_db
        image: postgres

        volumes:
            - ./initdb/:/docker-entrypoint-initdb.d/

        restart: always


# GraphQL interface for the database
    gql:
        env_file: 
            - .env
            - initkc/kc_data/private_data/token.env

        image: hasura/graphql-engine:v2.1.0-beta.3
        container_name: q_gql

        ports:
            - '8092:8080'

        command:
            - graphql-engine
            - serve

        restart: always

        
# Keycloak auth
    auth:
        env_file: .env

        container_name: q_auth
        image: ghcr.io/marcelcoding/keycloak:latest

        # mount configuration files
        volumes:
            - ./initkc/kc_init.sh:/kc_init.sh
            - ./initkc/kc_profile/profile.properties:/opt/jboss/keycloak/standalone/configuration/profile.properties
            - ./initkc/kc_data:/docker-entrypoint-initdb.d/
            - ./initkc/kc_theme:/opt/jboss/keycloak/themes/qiksar

        ports:
            - 8093:8080

        restart: always

# Rapid initial configuration of Hasura GraphQL
    qiktrak:
        env_file: .env
        
        container_name: qiktrak
        image: qiksar/qiktrak:latest

        volumes:
            - ./qiktrak:/qiktrak

        command:
            - node
            - qik-trak-cli.js

# API
    api:
        env_file: .env
        
        container_name: q_api
        
        build: 
            context: ../api
        
        ports:
            - 3000:3000

        restart: always

# nginx proxy
    proxy:
        env_file: .env
        
        container_name: q_proxy
        image: nginx
        
        volumes:
          - ./initnginx/nginx.conf:/etc/nginx/nginx.conf
          - ./initnginx/conf.d:/etc/nginx/conf.d
          - ./initnginx/private_data/ssl:/etc/nginx/ssl
          - ./app_root/pwa:/usr/share/nginx/app_root/pwa
        
        ports:
            - 80:80
            - 443:443

        links:
            - gql
            - auth
            - api
